@page "{id:guid}"
@using TelegramDigest.Web.Models.ViewModels
@using TelegramDigest.Web.Services
@model ProgressModel
@{
    ViewData["Title"] = "Digest Generation Progress";
}

@if (Model.Progress == null)
{
    <div class="alert alert-danger">
        An error occurred while loading the digest progress.
    </div>
    return;
}

@{
    var bgColor = Model.Progress.CurrentStep switch
    {
        DigestStepViewModelEnum.Error => "bg-danger",
        DigestStepViewModelEnum.Cancelled or DigestStepViewModelEnum.NoPostsFound => "bg-secondary",
        DigestStepViewModelEnum.Success => "bg-success",
        _ => ""
    };
}
<div class="container mt-4">
    <h1>Digest Generation Progress</h1>

    <div class="card mt-4">
        <div class="card-body">
            <!-- Card top -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="card-title mb-0">Status: @Model.Progress.CurrentStep</h5>

                <button class="btn btn-sm btn-outline-primary" onclick="location.reload();">
                    <i class="bi bi-arrow-clockwise"></i> Refresh
                </button>
            </div>

            <!-- Time -->
            <div class="d-flex gap-3 text-muted small mb-3">
                <div>
                    <i class="bi bi-clock"></i>
                    @(Model.Progress.StartedAt.HasValue
                        ? "Started: " + Model.Progress.StartedAt?.ToString("MMM dd, yyyy HH:mm:ss")
                        : "Not started yet"
                    )
                </div>
                @if (Model.Progress.CompletedAt.HasValue)
                {
                    <div>
                        <i class="bi bi-check-circle"></i>
                        Finished: @Model.Progress.CompletedAt.Value.ToString("MMM dd, yyyy HH:mm:ss")
                    </div>
                }
            </div>

            <!-- Progress -->
            <div class="progress mt-3 mb-3">
                <div class="progress-bar @bgColor" role="progressbar"
                     style="width: @Model.Progress.PercentComplete%;"
                     aria-valuenow="@Model.Progress.PercentComplete"
                     aria-valuemin="0"
                     aria-valuemax="100">
                    @Model.Progress.PercentComplete%
                </div>
            </div>

            <!-- Error -->
            @if (Model.Progress.ErrorMessage != null)
            {
                <pre
                    class="stack-trace p-3 border border-danger rounded text-bg-light">@Model.Progress.ErrorMessage</pre>
            }

            <!-- Steps -->
            <div class="mt-4">
                <div class="list-group">
                    @foreach (var step in Model.Progress.Steps)
                    {
                        var stepClass = "list-group-item";

                        stepClass += step.Type switch
                        {
                            DigestStepViewModelEnum.Error => " list-group-item-danger",
                            DigestStepViewModelEnum.Success => " list-group-item-success",
                            DigestStepViewModelEnum.Cancelled or DigestStepViewModelEnum.NoPostsFound => " list-group-item-secondary",
                            _ => " list-group-item-info"
                        };

                        <div class="@stepClass">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <strong>@step.Type</strong>

                                    @if (step is { Type: DigestStepViewModelEnum.AiProcessing })
                                    {
                                        <span>@step.PercentComplete%</span>
                                    }
                                </div>

                                <small>@step.Timestamp.ToString("HH:mm:ss")</small>
                            </div>

                            @if (!string.IsNullOrEmpty(step.Message))
                            {
                                <p class="mb-1">@step.Message</p>
                            }

                            @if (step is { Type: DigestStepViewModelEnum.RssReadingStarted, Feeds.Length: > 0 })
                            {
                                <div class="mt-2">
                                    <small>Feeds:</small>
                                    <ul class="list-unstyled ms-3">
                                        @foreach (var feed in step.Feeds)
                                        {
                                            <li><small>â€¢ @feed</small></li>
                                        }
                                    </ul>
                                </div>
                            }

                            @if (step is { Type: DigestStepViewModelEnum.RssReadingFinished, PostsCount: not null })
                            {
                                <div class="mt-1">
                                    <small>Posts found: @step.PostsCount</small>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Bottom exit button -->
            <div class="mt-3">
                @if (Model.Progress.CurrentStep == DigestStepViewModelEnum.Success)
                {
                    <a asp-page="/Digest/Index" asp-route-id="@Model.Progress.Id"
                       class="btn btn-success">View Digest</a>
                }
                else if (Model.Progress.CurrentStep == DigestStepViewModelEnum.Error)
                {
                    <a href="javascript:history.back()" class="btn btn-primary">Back</a>
                }
                else
                {
                    <a href="javascript:history.back()" class="btn btn-outline-secondary">Back</a>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @if (!Model.Progress.CurrentStep.HasValue || !Model.Progress.CurrentStep.Value.IsFinished())
    {
        <script>
            // Refresh the page every 10 seconds to update progress
            setTimeout(function () {
                window.location.reload();
            }, 10000);
        </script>
    }
}
