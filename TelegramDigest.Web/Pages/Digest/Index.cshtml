@page "{id:guid}"
@using System.Diagnostics
@model TelegramDigest.Web.Pages.Digest.IndexModel
@{
    ViewData["Title"] = Model.Summary != null
        ? $"Digest from {Model.Summary?.CreatedAt:MMM dd, yyyy}"
        : "Digest not found";
}

<div class="mb-4 d-flex justify-content-between">
    <a href="javascript:history.back()" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left"></i> Back
    </a>

    @if (Model.Summary != null)
    {
        <form method="post" asp-page-handler="Delete" asp-route-id="@Model.Id"
              onsubmit="return confirm('Are you sure you want to delete this digest?');">
            <button type="submit" class="btn btn-danger">
                <i class="bi bi-trash"></i> Delete Digest
            </button>
        </form>
    }
</div>

@if (Model.Summary == null)
{
    var id = Model.Id ?? throw new UnreachableException("Error in frontend! Can't load digest id");
    <div class="alert alert-warning">
        Digest @id not found.
    </div>
}
else if (Model.Posts == null)
{
    <div class="alert alert-warning">
        Failed to load posts.
    </div>
}
else
{
    <div class="card mb-4">
        <div class="card-body">
            <h2 class="card-title">
                Digest from @Model.Summary.CreatedAt.ToString("MMMM dd, yyyy HH:mm")
            </h2>
            <h5>Summary</h5>
            <p class="card-text">@Model.Summary.Summary</p>
        </div>
    </div>

    <h3>Posts</h3>
    @foreach (var post in Model.Posts.OrderByDescending(p => p.Importance))
    {
        <div class="card mb-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <h5 class="card-title">@post.FeedTitle</h5>
                    <span class="badge bg-primary">Importance: @post.Importance</span>
                </div>
                <p class="card-text">@post.Summary</p>
                <div class="d-flex justify-content-between align-items-center">
                    <small class="text-muted">
                        Posted at @post.PostedAt.ToString("MMM dd, yyyy HH:mm")
                    </small>
                    @if (!string.IsNullOrEmpty(post.Url))
                    {
                        <a href="@post.Url" target="_blank" class="btn btn-sm btn-outline-primary">
                            View Original <i class="bi bi-box-arrow-up-right"></i>
                        </a>
                    }
                </div>
            </div>
        </div>
    }
}
