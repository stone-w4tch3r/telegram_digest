// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramDigest.Application.Database;

#nullable disable

namespace TelegramDigest.Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("DigestPosts", b =>
                {
                    b.Property<Guid>("DigestEntityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PostsNavId")
                        .HasColumnType("TEXT");

                    b.HasKey("DigestEntityId", "PostsNavId");

                    b.HasIndex("PostsNavId");

                    b.ToTable("DigestPosts");
                });

            modelBuilder.Entity("TelegramDigest.Application.Database.ChannelEntity", b =>
                {
                    b.Property<string>("TgId")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("TgId");

                    b.ToTable("Channels", (string)null);
                });

            modelBuilder.Entity("TelegramDigest.Application.Database.DigestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Digests", (string)null);
                });

            modelBuilder.Entity("TelegramDigest.Application.Database.DigestSummaryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("AverageImportance")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<int>("PostsCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostsSummary")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DigestSummaries", (string)null);
                });

            modelBuilder.Entity("TelegramDigest.Application.Database.PostSummaryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelTgId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("Importance")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelTgId");

                    b.ToTable("PostSummaries", (string)null);
                });

            modelBuilder.Entity("DigestPosts", b =>
                {
                    b.HasOne("TelegramDigest.Application.Database.DigestEntity", null)
                        .WithMany()
                        .HasForeignKey("DigestEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramDigest.Application.Database.PostSummaryEntity", null)
                        .WithMany()
                        .HasForeignKey("PostsNavId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelegramDigest.Application.Database.DigestSummaryEntity", b =>
                {
                    b.HasOne("TelegramDigest.Application.Database.DigestEntity", "DigestNav")
                        .WithOne("SummaryNav")
                        .HasForeignKey("TelegramDigest.Application.Database.DigestSummaryEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigestNav");
                });

            modelBuilder.Entity("TelegramDigest.Application.Database.PostSummaryEntity", b =>
                {
                    b.HasOne("TelegramDigest.Application.Database.ChannelEntity", "ChannelNav")
                        .WithMany()
                        .HasForeignKey("ChannelTgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChannelNav");
                });

            modelBuilder.Entity("TelegramDigest.Application.Database.DigestEntity", b =>
                {
                    b.Navigation("SummaryNav");
                });
#pragma warning restore 612, 618
        }
    }
}
